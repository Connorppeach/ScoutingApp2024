/*
 Copyright (c) 2013, Rodrigo Gonz√°lez, Sapienlab All Rights Reserved.
 Available via MIT LICENSE. See https://github.com/roro89/jsonpack/blob/master/LICENSE.md for details.
*/
!function(e){e([],(function(){var e=-4,r=function(e){return"string"!=typeof e?e:e.replace(/[\+ \|\^\%]/g,(function(e){return{" ":"+","+":"%2B","|":"%7C","^":"%5E","%":"%25"}[e]}))},n=function(e){return"string"!=typeof e?e:e.replace(/\+|%2B|%7C|%5E|%25/g,(function(e){return{"+":" ","%2B":"+","%7C":"|","%5E":"^","%25":"%"}[e]}))},t=function(e){return Number.prototype.toString.call(e,36).toUpperCase()},i=function(e){return parseInt(e,36)},o=Array.prototype.indexOf||function(e,r){for(var n=r||0,t=this.length;n<t;n++)if(this[n]===e)return n;return-1};return{JSON,pack:function(n,i){var s=(i=i||{}).verbose||!1;s&&console.log("Normalize the JSON Object"),n="string"==typeof n?this.JSON.parse(n):n,s&&console.log("Creating a empty dictionary");var a={strings:[],integers:[],floats:[]};s&&console.log("Creating the AST");var l=function n(i){s&&console.log("Calling recursiveAstBuilder with "+this.JSON.stringify(i));var l,u=typeof i;if(null===i)return{type:"null",index:-3};if(void 0===i)return{type:"undefined",index:-5};if(i instanceof Array){var f=["@"];for(var c in i)i.hasOwnProperty(c)&&f.push(n(i[c]));return f}if("object"===u){f=["$"];for(var g in i)i.hasOwnProperty(g)&&(f.push(n(g)),f.push(n(i[g])));return f}if(""===i)return{type:"empty",index:e};if("string"===u)return-1==(l=o.call(a.strings,i))&&(a.strings.push(r(i)),l=a.strings.length-1),{type:"strings",index:l};if("number"===u&&i%1==0)return-1==(l=o.call(a.integers,i))&&(a.integers.push(t(i)),l=a.integers.length-1),{type:"integers",index:l};if("number"===u)return-1==(l=o.call(a.floats,i))&&(a.floats.push(i),l=a.floats.length-1),{type:"floats",index:l};if("boolean"===u)return{type:"boolean",index:i?-1:-2};throw new Error("Unexpected argument of type "+typeof i)}(n),u=a.strings.length,f=a.integers.length;a.floats.length;s&&console.log("Parsing the dictionary");var c=a.strings.join("|");return c+="^"+a.integers.join("|"),c+="^"+a.floats.join("|"),s&&console.log("Parsing the structure"),c+="^"+function r(n){if(s&&console.log("Calling a recursiveParser with "+this.JSON.stringify(n)),n instanceof Array){var i=n.shift();for(var o in n)n.hasOwnProperty(o)&&(i+=r(n[o])+"|");return("|"===i[i.length-1]?i.slice(0,-1):i)+"]"}var a=n.type,l=n.index;if("strings"===a)return t(l);if("integers"===a)return t(u+l);if("floats"===a)return t(u+f+l);if("boolean"===a)return n.index;if("null"===a)return-3;if("undefined"===a)return-5;if("empty"===a)return e;throw new TypeError("The item is alien!")}(l),s&&console.log("Ending parser"),i.debug?{dictionary:a,ast:l,packed:c}:c},unpack:function(r,t){t=t||{};var o=r.split("^");t.verbose&&console.log("Building dictionary");var s=[],a=o[0];if(""!==a){a=a.split("|"),t.verbose&&console.log("Parse the strings dictionary");for(var l=0,u=a.length;l<u;l++)s.push(n(a[l]))}if(""!==(a=o[1])){a=a.split("|"),t.verbose&&console.log("Parse the integers dictionary");for(l=0,u=a.length;l<u;l++)s.push(i(a[l]))}if(""!==(a=o[2])){a=a.split("|"),t.verbose&&console.log("Parse the floats dictionary");for(l=0,u=a.length;l<u;l++)s.push(parseFloat(a[l]))}a=null,t.verbose&&console.log("Tokenizing the structure");var f="",c=[],g=o[3].length;for(l=0;l<g;l++){var p=o[3].charAt(l);"|"===p||"$"===p||"@"===p||"]"===p?(f&&(c.push(i(f)),f=""),"|"!==p&&c.push(p)):f+=p}var h=c.length,d=0;return t.verbose&&console.log("Starting recursive parser"),function r(){var n=c[d++];if(t.verbose&&console.log("Reading collection type "+("$"===n?"object":"Array")),"@"===n){for(var i=[];d<h;d++){var o=c[d];if(t.verbose&&console.log("Read "+o+" symbol"),"]"===o)return i;if("@"===o||"$"===o)i.push(r());else switch(o){case-1:i.push(!0);break;case-2:i.push(!1);break;case-3:i.push(null);break;case-5:i.push(void 0);break;case e:i.push("");break;default:i.push(s[o])}}return t.verbose&&console.log("Parsed "+this.JSON.stringify(i)),i}if("$"===n){for(i={};d<h;d++){var a=c[d];if("]"===a)return i;if(a=a===e?"":s[a],"@"===(o=c[++d])||"$"===o)i[a]=r();else switch(o){case-1:i[a]=!0;break;case-2:i[a]=!1;break;case-3:i[a]=null;break;case-5:i[a]=void 0;break;case e:i[a]="";break;default:i[a]=s[o]}}return t.verbose&&console.log("Parsed "+this.JSON.stringify(i)),i}throw new TypeError("Bad token "+n+" isn't a type")}()}}}))}("undefined"!=typeof define&&define.amd?define:function(e,r){var n=r();if("undefined"!=typeof exports)for(var t in n)exports[t]=n[t];else window.jsonpack=n});